1. Java Encapsulation

public class Swimmer {
    private String name;
    private double swimTime;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getSwimTime() {
        return swimTime;
    }

    public void setSwimTime(double swimTime) {
        if (swimTime > 0) {
            this.swimTime = swimTime;
        }
    }
}


---

2. Java Packages / API

import java.util.Scanner;

public class SwimInput {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter your swim style: ");
        String style = scanner.nextLine();
        System.out.println("You swim in " + style + " style.");
    }
}


---

3. Java Inheritance

class Swimmer {
    void swim() {
        System.out.println("Swimming...");
    }
}

class FreestyleSwimmer extends Swimmer {
    void style() {
        System.out.println("Swimming freestyle.");
    }
}


---

4. Java Polymorphism

class Swimmer {
    void swim() {
        System.out.println("Swimmer swims.");
    }
}

class ButterflySwimmer extends Swimmer {
    void swim() {
        System.out.println("Butterfly swimmer swims.");
    }
}

public class Pool {
    public static void main(String[] args) {
        Swimmer s = new ButterflySwimmer();
        s.swim();
    }
}


---

5. Java Inner Classes

class SwimTeam {
    String teamName = "Dolphins";

    class Swimmer {
        void display() {
            System.out.println("Swimmer is in team " + teamName);
        }
    }
}


---

6. Java Abstraction

abstract class Swimmer {
    abstract void swim();
}

class BackstrokeSwimmer extends Swimmer {
    void swim() {
        System.out.println("Swimming backstroke.");
    }
}


---

7. Java Interface

interface Swim {
    void dive();
}

class Diver implements Swim {
    public void dive() {
        System.out.println("Diving into the pool!");
    }
}


---

8. Java Enums

enum StrokeType {
    FREESTYLE, BUTTERFLY, BACKSTROKE, BREASTSTROKE
}

public class SwimRace {
    public static void main(String[] args) {
        StrokeType stroke = StrokeType.BUTTERFLY;
        System.out.println("Chosen stroke: " + stroke);
    }
}


---

9. Java User Input

import java.util.Scanner;

public class SwimTime {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter your swim time: ");
        double time = scanner.nextDouble();
        System.out.println("Your swim time: " + time + " seconds.");
    }
}


---

10. Java Date

import java.time.LocalDate;

public class SwimEvent {
    public static void main(String[] args) {
        LocalDate date = LocalDate.now();
        System.out.println("Swim event date: " + date);
    }
}

11. Java ArrayList

import java.util.ArrayList;

public class SwimList {
    public static void main(String[] args) {
        ArrayList<String> swimmers = new ArrayList<>();
        swimmers.add("Anna");
        swimmers.add("Max");
        swimmers.add("Leo");

        for (String name : swimmers) {
            System.out.println(name + " is registered for the swim race.");
        }
    }
}


---

12. Java LinkedList

import java.util.LinkedList;

public class SwimQueue {
    public static void main(String[] args) {
        LinkedList<String> queue = new LinkedList<>();
        queue.add("Alice");
        queue.add("Bob");
        queue.add("Charlie");

        System.out.println("Next swimmer: " + queue.poll());
    }
}


---

13. Java List Sorting

import java.util.*;

public class SwimTimes {
    public static void main(String[] args) {
        ArrayList<Double> times = new ArrayList<>(Arrays.asList(58.3, 54.7, 61.0, 53.2));
        Collections.sort(times);

        System.out.println("Sorted swim times:");
        for (double time : times) {
            System.out.println(time + " seconds");
        }
    }
}


---

14. Java HashMap

import java.util.HashMap;

public class SwimmerScores {
    public static void main(String[] args) {
        HashMap<String, Integer> scores = new HashMap<>();
        scores.put("Mia", 95);
        scores.put("Jake", 88);

        System.out.println("Mia's score: " + scores.get("Mia"));
    }
}


---

15. Java HashSet

import java.util.HashSet;

public class SwimStyles {
    public static void main(String[] args) {
        HashSet<String> styles = new HashSet<>();
        styles.add("Freestyle");
        styles.add("Backstroke");
        styles.add("Butterfly");
        styles.add("Freestyle"); // duplicate

        System.out.println("Available swim styles: " + styles);
    }
}


---

16. Java Iterator

import java.util.*;

public class SwimParticipants {
    public static void main(String[] args) {
        ArrayList<String> participants = new ArrayList<>(List.of("Ella", "Tom", "Nina"));
        Iterator<String> it = participants.iterator();

        while (it.hasNext()) {
            System.out.println(it.next() + " is ready to swim.");
        }
    }
}


---

17. Java Wrapper Classes

public class SwimResults {
    public static void main(String[] args) {
        Integer lapCount = 4;
        Double bestTime = 52.8;

        System.out.println("Laps completed: " + lapCount);
        System.out.println("Best time: " + bestTime + " seconds");
    }
}


---

18. Arrays

public class SwimLanes {
    public static void main(String[] args) {
        String[] lanes = {"Lane 1", "Lane 2", "Lane 3"};

        for (String lane : lanes) {
            System.out.println("Swimmer assigned to " + lane);
        }
    }
}


---

19. Loop Through an Array

public class SwimNames {
    public static void main(String[] args) {
        String[] swimmers = {"Eva", "Nick", "Sam"};

        for (int i = 0; i < swimmers.length; i++) {
            System.out.println("Swimmer " + (i + 1) + ": " + swimmers[i]);
        }
    }
}


---

20. Real-Life Examples (Arrays)

public class SwimScores {
    public static void main(String[] args) {
        int[] scores = {85, 92, 78, 90};

        int total = 0;
        for (int score : scores) {
            total += score;
        }

        System.out.println("Average swim score: " + (total / scores.length));
    }
}


---

21. Multidimensional Arrays

public class SwimMeet {
    public static void main(String[] args) {
        int[][] times = {
            {55, 60},
            {53, 58}
        };

        for (int i = 0; i < times.length; i++) {
            System.out.println("Swimmer " + (i + 1) + " times: ");
            for (int j = 0; j < times[i].length; j++) {
                System.out.print(times[i][j] + "s ");
            }
            System.out.println();
        }
    }
}
